<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzwl.ias.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.zzwl.ias.domain.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="password_salt" jdbcType="VARCHAR" property="passwordSalt"/>
        <result column="password_backup" jdbcType="VARCHAR" property="passwordBackup"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
        <result column="area" jdbcType="DOUBLE" property="area"/>
        <result column="per_mu_yield" jdbcType="DOUBLE" property="perMuYield"/>
        <result column="crop" jdbcType="VARCHAR" property="crop"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, mobile, username, password, password_salt, password_backup, image, area, per_mu_yield, crop
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from users
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from users
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.zzwl.ias.domain.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into users (id, mobile, username,
        password, password_salt, password_backup,
        image)
        values (#{id,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR}, #{passwordSalt,jdbcType=VARCHAR}, #{passwordBackup,jdbcType=VARCHAR},
        #{image,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.zzwl.ias.domain.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="passwordSalt != null">
                password_salt,
            </if>
            <if test="passwordBackup != null">
                password_backup,
            </if>
            <if test="image != null">
                image,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="passwordSalt != null">
                #{passwordSalt,jdbcType=VARCHAR},
            </if>
            <if test="passwordBackup != null">
                #{passwordBackup,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                #{image,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zzwl.ias.domain.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update users
        <set>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="passwordSalt != null">
                password_salt = #{passwordSalt,jdbcType=VARCHAR},
            </if>
            <if test="passwordBackup != null">
                password_backup = #{passwordBackup,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="crop != null and crop !='' ">
                crop = #{crop,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=VARCHAR},
            </if>
            <if test="perMuYield != null">
                per_mu_yield = #{perMuYield,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zzwl.ias.domain.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update users
        set mobile = #{mobile,jdbcType=VARCHAR},
        username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        password_salt = #{passwordSalt,jdbcType=VARCHAR},
        password_backup = #{passwordBackup,jdbcType=VARCHAR},
        image = #{image,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByUserId" resultMap="BaseResultMap">
        select id, mobile, username, image, area, crop, per_mu_yield
        from users
        where id = #{id}
    </select>

    <select id="selectByUserName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users
        where username = #{name}
    </select>

    <select id="selectByMobile" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users
        where mobile = #{mobile}
    </select>

    <update id="updateMobileByUserId">
        update users
        set mobile = #{mobile,jdbcType=VARCHAR}
        where id = #{userId,jdbcType=INTEGER}
    </update>
    <resultMap id="UserListMap" type="com.zzwl.ias.vo.UserListVo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="id_card" jdbcType="INTEGER" property="idCard"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
    </resultMap>
    <select id="selectUserList" resultMap="UserListMap">
        SELECT u.id,
        u.username,
        u.mobile,
        u.id_card,
        CONCAT(
        IFNULL(cr.name, ''),
        IFNULL(crr.name, ''),
        IFNULL(crrr.name, ''),
        IFNULL(crrrr.name, ''),
        IFNULL(crrrrr.name, ''),
        IFNULL(u.address, '')
        ) address,
        DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') create_time
        FROM users u
        LEFT JOIN common_region cr ON cr.id = u.province_id
        LEFT JOIN common_region crr ON crr.id = u.city_id
        LEFT JOIN common_region crrr ON crrr.id = u.district_id
        LEFT JOIN common_region crrrr ON crrrr.id = u.town_id
        LEFT JOIN common_region crrrrr ON crrrrr.id = u.village_id
        <where>
            u.is_delete = 1
            <if test="regionId">
                and (u.province_id = #{regionId} or
                u.city_id = #{regionId} or
                u.district_id = #{regionId} or
                u.town_id = #{regionId} or
                u.village_id = #{regionId})
            </if>
            <if test="like != ''">
                and (u.id like concat('%',#{like},'%') or u.mobile like concat('%',#{like},'%') or u.username like
                concat('%',#{like},'%') or u.id_card like concat('%',#{like},'%'))
            </if>
        </where>
        ORDER BY create_time DESC
    </select>
    <resultMap id="UserDetailMap" type="com.zzwl.ias.vo.UserDetailVo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="name"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="id_card" jdbcType="VARCHAR" property="idCard"/>
        <result column="province_id" jdbcType="INTEGER" property="provinceId"/>
        <result column="city_id" jdbcType="INTEGER" property="cityId"/>
        <result column="district_id" jdbcType="INTEGER" property="districtId"/>
        <result column="town_id" jdbcType="INTEGER" property="townId"/>
        <result column="village_id" jdbcType="VARCHAR" property="villageId"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
    </resultMap>
    <select id="selectUserById" resultMap="UserDetailMap">
        SELECT u.id,
               u.username,
               u.mobile,
               u.id_card,
               u.province_id,
               u.city_id,
               u.district_id,
               u.town_id,
               u.village_id,
               u.address
        FROM users u
        WHERE u.id = #{id}
    </select>
    <resultMap id="UserAddIaSystemMap" type="com.zzwl.ias.vo.UserAddIaSystemVo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="alias" jdbcType="VARCHAR" property="alias"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
    </resultMap>
    <select id="selectIaSystemInUser" resultMap="UserAddIaSystemMap">
        SELECT
        i.id,
        i.name,
        i.alias,
        CONCAT(
        IFNULL(cr.name, ''),
        IFNULL(crr.name, ''),
        IFNULL(crrr.name, ''),
        IFNULL(crrrr.name, ''),
        IFNULL(crrrrr.name, ''),
        IFNULL(i.address, '')
        ) address
        FROM
        iasystem i
        LEFT JOIN common_region cr
        ON cr.id = i.province_id
        LEFT JOIN common_region crr
        ON crr.id = i.city_id
        LEFT JOIN common_region crrr
        ON crrr.id = i.district_id
        LEFT JOIN common_region crrrr
        ON crrrr.id = i.town_id
        LEFT JOIN common_region crrrrr
        ON crrrrr.id = i.village_id
        WHERE i.id NOT IN
        (SELECT
        ui.ias_id
        FROM
        user_ias ui
        <where>
            ui.user_id = #{userId})
            <if test="like != ''">
                and (i.id = #{like} or i.name like CONCAT('%',#{like},'%'))
            </if>
            <if test="regionId != null">
                and ( i.province_id = #{regionId} or
                i.city_id = #{regionId} or
                i.district_id = #{regionId} or
                i.town_id = #{regionId} or
                i.village_id = #{regionId})
            </if>
        </where>
    </select>
    <insert id="insertUserAndIaSystem" parameterType="java.util.Map">
        INSERT INTO user_ias (user_id, ias_id, role_id)
        VALUES
        <foreach collection="list" item="map" separator=",">
            (#{map.userId}, #{map.iaSystemId}, #{map.roleId})
        </foreach>
    </insert>
    <select id="countUserAndIaSystem" resultType="java.lang.Integer"
            parameterType="com.zzwl.ias.dto.iasystem.AddUserAndIaSystemDTO">
        SELECT COUNT(*) countt
        FROM user_ias ui
        WHERE ui.user_id = #{userId}
          AND ui.ias_id = #{iaSystemId}
    </select>
    <select id="countUserByIdCard" resultType="java.lang.Integer">
        SELECT COUNT(*) countt
        FROM users
        WHERE users.id_card = #{idCard}
    </select>
    <insert id="insertUser" parameterType="com.zzwl.ias.dto.UserAddDTO">
        INSERT INTO users (mobile,
                           username,
                           password,
                           id_card,
                           password_backup,
                           province_id,
                           city_id,
                           district_id,
                           town_id,
                           village_id,
                           address)
        VALUES (#{mobile},
                #{name},
                #{password},
                #{idCard},
                #{passwordBackup},
                #{provinceId},
                #{cityId},
                #{districtId},
                #{townId},
                #{villageId},
                #{address})
    </insert>
    <update id="userUpdate" parameterType="com.zzwl.ias.dto.UserUpdateDTO">
        UPDATE users
        SET mobile = #{mobile},
        username = #{name},
        id_card = #{idCard},
        province_id = #{provinceId},
        city_id = #{cityId},
        district_id = #{districtId},
        town_id = #{townId},
        village_id = #{villageId},
        address = #{address}
        <if test="passwordBackup != null">
            ,password_backup = #{passwordBackup},
        </if>
        <if test="password != null">
            password = #{password}
        </if>
        WHERE id = #{id}
    </update>
    <select id="userLookDetail" resultMap="UserListMap">
        SELECT u.id,
               u.username,
               u.mobile,
               u.id_card,
               CONCAT(
                   IFNULL(cr.name, ''),
                   IFNULL(crr.name, ''),
                   IFNULL(crrr.name, ''),
                   IFNULL(crrrr.name, ''),
                   IFNULL(crrrrr.name, ''),
                   IFNULL(u.address, '')
                       ) address
        FROM users u
                 LEFT JOIN common_region cr ON cr.id = u.province_id
                 LEFT JOIN common_region crr ON crr.id = u.city_id
                 LEFT JOIN common_region crrr ON crrr.id = u.district_id
                 LEFT JOIN common_region crrrr ON crrrr.id = u.town_id
                 LEFT JOIN common_region crrrrr ON crrrrr.id = u.village_id
        WHERE u.id = #{userId}
    </select>
    <update id="deleteUser">
        UPDATE users u
        SET u.is_delete = 0
        WHERE u.id = #{userId}
    </update>
    <delete id="deleteUserAndIaSystem">
        delete
        from user_ias
        where user_id = #{userId}
          and ias_id = #{iasId}
    </delete>
    <resultMap id="RoleMap" type="com.zzwl.ias.vo.RoleVo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="role_name" jdbcType="VARCHAR" property="name"/>
    </resultMap>
    <select id="selectRole" resultMap="RoleMap">
        SELECT rp.id, rp.role_name
        FROM role_permission rp
    </select>
    <select id="selectUserByIdCard" resultMap="UserDetailMap">
        SELECT *
        FROM users u
        WHERE u.id_card = #{idCard}
    </select>
    <select id="selectUserIdsByAddressId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT u.id
        FROM users u
        WHERE u.province_id = #{addressId}
           or u.city_id = #{addressId}
           or u.district_id = #{addressId}
           or u.town_id = #{addressId}
           or u.village_id = #{addressId}
    </select>
</mapper>