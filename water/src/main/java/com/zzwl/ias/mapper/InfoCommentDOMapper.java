package com.zzwl.ias.mapper;

import com.zzwl.ias.domain.InfoCommentDO;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface InfoCommentDOMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table info_comment
     *
     * @mbg.generated
     */
    @Delete({
        "delete from info_comment",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table info_comment
     *
     * @mbg.generated
     */
    @Insert({
        "insert into info_comment (id, articleId, ",
        "userId, subjectId, ",
        "comment, publishTime, ",
        "likeCount)",
        "values (#{id,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, ",
        "#{userId,jdbcType=INTEGER}, #{subjectId,jdbcType=SMALLINT}, ",
        "#{comment,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, ",
        "#{likeCount,jdbcType=SMALLINT})"
    })
    int insert(InfoCommentDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table info_comment
     *
     * @mbg.generated
     */
    @InsertProvider(type=InfoCommentDOSqlProvider.class, method="insertSelective")
    int insertSelective(InfoCommentDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table info_comment
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, articleId, userId, subjectId, comment, publishTime, likeCount",
        "from info_comment",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="articleId", property="articleId", jdbcType=JdbcType.INTEGER),
        @Result(column="userId", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="subjectId", property="subjectId", jdbcType=JdbcType.SMALLINT),
        @Result(column="comment", property="comment", jdbcType=JdbcType.VARCHAR),
        @Result(column="publishTime", property="publishTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="likeCount", property="likeCount", jdbcType=JdbcType.SMALLINT)
    })
    InfoCommentDO selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table info_comment
     *
     * @mbg.generated
     */
    @UpdateProvider(type=InfoCommentDOSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(InfoCommentDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table info_comment
     *
     * @mbg.generated
     */
    @Update({
        "update info_comment",
        "set articleId = #{articleId,jdbcType=INTEGER},",
          "userId = #{userId,jdbcType=INTEGER},",
          "subjectId = #{subjectId,jdbcType=SMALLINT},",
          "comment = #{comment,jdbcType=VARCHAR},",
          "publishTime = #{publishTime,jdbcType=TIMESTAMP},",
          "likeCount = #{likeCount,jdbcType=SMALLINT}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(InfoCommentDO record);
}