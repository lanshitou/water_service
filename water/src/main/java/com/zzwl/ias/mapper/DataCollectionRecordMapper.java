package com.zzwl.ias.mapper;

import com.zzwl.ias.domain.DataCollectionRecord;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface DataCollectionRecordMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_collections
     *
     * @mbg.generated
     */
    @Delete({
        "delete from data_collections",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_collections
     *
     * @mbg.generated
     */
    @Insert({
        "insert into data_collections (id, sensor_id, ",
        "type, value, time, ",
        "collection_type)",
        "values (#{id,jdbcType=INTEGER}, #{sensorId,jdbcType=BIGINT}, ",
        "#{type,jdbcType=INTEGER}, #{value,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, ",
        "#{collectionType,jdbcType=INTEGER})"
    })
    int insert(DataCollectionRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_collections
     *
     * @mbg.generated
     */
    @InsertProvider(type=DataCollectionRecordSqlProvider.class, method="insertSelective")
    int insertSelective(DataCollectionRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_collections
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, sensor_id, type, value, time, collection_type",
        "from data_collections",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="sensor_id", property="sensorId", jdbcType=JdbcType.BIGINT),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="value", property="value", jdbcType=JdbcType.INTEGER),
        @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="collection_type", property="collectionType", jdbcType=JdbcType.INTEGER)
    })
    DataCollectionRecord selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_collections
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DataCollectionRecordSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(DataCollectionRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_collections
     *
     * @mbg.generated
     */
    @Update({
        "update data_collections",
        "set sensor_id = #{sensorId,jdbcType=BIGINT},",
          "type = #{type,jdbcType=INTEGER},",
          "value = #{value,jdbcType=INTEGER},",
          "time = #{time,jdbcType=TIMESTAMP},",
          "collection_type = #{collectionType,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(DataCollectionRecord record);
}