package com.zzwl.ias.mapper;

import com.zzwl.ias.domain.MessageAlarmRecord;
import org.apache.ibatis.jdbc.SQL;

public class MessageAlarmRecordSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table message_alarm
     *
     * @mbg.generated
     */
    public String insertSelective(MessageAlarmRecord record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("message_alarm");

        if (record.getId() != null) {
            sql.VALUES("id", "#{id,jdbcType=INTEGER}");
        }

        if (record.getSersorId() != null) {
            sql.VALUES("sersor_id", "#{sersorId,jdbcType=BIGINT}");
        }

        if (record.getTitle() != null) {
            sql.VALUES("title", "#{title,jdbcType=VARCHAR}");
        }

        if (record.getContent() != null) {
            sql.VALUES("content", "#{content,jdbcType=VARCHAR}");
        }

        if (record.getIsRead() != null) {
            sql.VALUES("is_read", "#{isRead,jdbcType=TINYINT}");
        }

        if (record.getAlarmThresholdId() != null) {
            sql.VALUES("alarm_threshold_id", "#{alarmThresholdId,jdbcType=INTEGER}");
        }

        if (record.getDataType() != null) {
            sql.VALUES("data_type", "#{dataType,jdbcType=INTEGER}");
        }

        if (record.getAlarmType() != null) {
            sql.VALUES("alarm_type", "#{alarmType,jdbcType=TINYINT}");
        }

        if (record.getLevel() != null) {
            sql.VALUES("level", "#{level,jdbcType=TINYINT}");
        }

        if (record.getStatus() != null) {
            sql.VALUES("status", "#{status,jdbcType=INTEGER}");
        }

        if (record.getThreshold() != null) {
            sql.VALUES("threshold", "#{threshold,jdbcType=INTEGER}");
        }

        if (record.getOccurTime() != null) {
            sql.VALUES("occur_time", "#{occurTime,jdbcType=TIMESTAMP}");
        }

        if (record.getEndTime() != null) {
            sql.VALUES("end_time", "#{endTime,jdbcType=TIMESTAMP}");
        }

        if (record.getEndReason() != null) {
            sql.VALUES("end_reason", "#{endReason,jdbcType=INTEGER}");
        }

        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table message_alarm
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(MessageAlarmRecord record) {
        SQL sql = new SQL();
        sql.UPDATE("message_alarm");

        if (record.getSersorId() != null) {
            sql.SET("sersor_id = #{sersorId,jdbcType=BIGINT}");
        }

        if (record.getTitle() != null) {
            sql.SET("title = #{title,jdbcType=VARCHAR}");
        }

        if (record.getContent() != null) {
            sql.SET("content = #{content,jdbcType=VARCHAR}");
        }

        if (record.getIsRead() != null) {
            sql.SET("is_read = #{isRead,jdbcType=TINYINT}");
        }

        if (record.getAlarmThresholdId() != null) {
            sql.SET("alarm_threshold_id = #{alarmThresholdId,jdbcType=INTEGER}");
        }

        if (record.getDataType() != null) {
            sql.SET("data_type = #{dataType,jdbcType=INTEGER}");
        }

        if (record.getAlarmType() != null) {
            sql.SET("alarm_type = #{alarmType,jdbcType=TINYINT}");
        }

        if (record.getLevel() != null) {
            sql.SET("level = #{level,jdbcType=TINYINT}");
        }

        if (record.getStatus() != null) {
            sql.SET("status = #{status,jdbcType=INTEGER}");
        }

        if (record.getThreshold() != null) {
            sql.SET("threshold = #{threshold,jdbcType=INTEGER}");
        }

        if (record.getOccurTime() != null) {
            sql.SET("occur_time = #{occurTime,jdbcType=TIMESTAMP}");
        }

        if (record.getEndTime() != null) {
            sql.SET("end_time = #{endTime,jdbcType=TIMESTAMP}");
        }

        if (record.getEndReason() != null) {
            sql.SET("end_reason = #{endReason,jdbcType=INTEGER}");
        }

        sql.WHERE("id = #{id,jdbcType=INTEGER}");

        return sql.toString();
    }
}