package com.zzwl.ias.mapper;

import com.zzwl.ias.domain.InfoCommentDO;
import org.apache.ibatis.jdbc.SQL;

public class InfoCommentDOSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table info_comment
     *
     * @mbg.generated
     */
    public String insertSelective(InfoCommentDO record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("info_comment");
        
        if (record.getId() != null) {
            sql.VALUES("id", "#{id,jdbcType=INTEGER}");
        }
        
        if (record.getArticleId() != null) {
            sql.VALUES("articleId", "#{articleId,jdbcType=INTEGER}");
        }
        
        if (record.getUserId() != null) {
            sql.VALUES("userId", "#{userId,jdbcType=INTEGER}");
        }
        
        if (record.getSubjectId() != null) {
            sql.VALUES("subjectId", "#{subjectId,jdbcType=SMALLINT}");
        }
        
        if (record.getComment() != null) {
            sql.VALUES("comment", "#{comment,jdbcType=VARCHAR}");
        }
        
        if (record.getPublishTime() != null) {
            sql.VALUES("publishTime", "#{publishTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLikeCount() != null) {
            sql.VALUES("likeCount", "#{likeCount,jdbcType=SMALLINT}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table info_comment
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(InfoCommentDO record) {
        SQL sql = new SQL();
        sql.UPDATE("info_comment");
        
        if (record.getArticleId() != null) {
            sql.SET("articleId = #{articleId,jdbcType=INTEGER}");
        }
        
        if (record.getUserId() != null) {
            sql.SET("userId = #{userId,jdbcType=INTEGER}");
        }
        
        if (record.getSubjectId() != null) {
            sql.SET("subjectId = #{subjectId,jdbcType=SMALLINT}");
        }
        
        if (record.getComment() != null) {
            sql.SET("comment = #{comment,jdbcType=VARCHAR}");
        }
        
        if (record.getPublishTime() != null) {
            sql.SET("publishTime = #{publishTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLikeCount() != null) {
            sql.SET("likeCount = #{likeCount,jdbcType=SMALLINT}");
        }
        
        sql.WHERE("id = #{id,jdbcType=INTEGER}");
        
        return sql.toString();
    }
}