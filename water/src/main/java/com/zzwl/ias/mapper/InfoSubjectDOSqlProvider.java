package com.zzwl.ias.mapper;

import com.zzwl.ias.domain.InfoSubjectDO;
import org.apache.ibatis.jdbc.SQL;

public class InfoSubjectDOSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table info_subject
     *
     * @mbg.generated
     */
    public String insertSelective(InfoSubjectDO record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("info_subject");
        
        if (record.getId() != null) {
            sql.VALUES("id", "#{id,jdbcType=SMALLINT}");
        }
        
        if (record.getTitle() != null) {
            sql.VALUES("title", "#{title,jdbcType=VARCHAR}");
        }
        
        if (record.getImg() != null) {
            sql.VALUES("img", "#{img,jdbcType=VARCHAR}");
        }
        
        if (record.getOriginImg() != null) {
            sql.VALUES("originImg", "#{originImg,jdbcType=VARCHAR}");
        }
        
        if (record.getWatchCount() != null) {
            sql.VALUES("watchCount", "#{watchCount,jdbcType=SMALLINT}");
        }
        
        if (record.getCommentCount() != null) {
            sql.VALUES("commentCount", "#{commentCount,jdbcType=SMALLINT}");
        }
        
        if (record.getPublishTime() != null) {
            sql.VALUES("publishTime", "#{publishTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getSummary() != null) {
            sql.VALUES("summary", "#{summary,jdbcType=VARCHAR}");
        }
        
        if (record.getOrigin() != null) {
            sql.VALUES("origin", "#{origin,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table info_subject
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(InfoSubjectDO record) {
        SQL sql = new SQL();
        sql.UPDATE("info_subject");
        
        if (record.getTitle() != null) {
            sql.SET("title = #{title,jdbcType=VARCHAR}");
        }
        
        if (record.getImg() != null) {
            sql.SET("img = #{img,jdbcType=VARCHAR}");
        }
        
        if (record.getOriginImg() != null) {
            sql.SET("originImg = #{originImg,jdbcType=VARCHAR}");
        }
        
        if (record.getWatchCount() != null) {
            sql.SET("watchCount = #{watchCount,jdbcType=SMALLINT}");
        }
        
        if (record.getCommentCount() != null) {
            sql.SET("commentCount = #{commentCount,jdbcType=SMALLINT}");
        }
        
        if (record.getPublishTime() != null) {
            sql.SET("publishTime = #{publishTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getSummary() != null) {
            sql.SET("summary = #{summary,jdbcType=VARCHAR}");
        }
        
        if (record.getOrigin() != null) {
            sql.SET("origin = #{origin,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("id = #{id,jdbcType=SMALLINT}");
        
        return sql.toString();
    }
}